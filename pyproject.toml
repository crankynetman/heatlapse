[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "heatlapse"
dynamic = ["version"]
description = "A python tool for creating a heatmap timelapse of GPX files"
readme = "README.md"
requires-python = ">=3.13"
authors = [{name = "Author", email = "spam@slash64.tech" }]
dependencies = []

[project.optional-dependencies]
dev = ["pytest", "pre-commit"]


[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.dynamic]
version = {attr = "heatlapse.__version__"}

[project.urls]
Repository = "https://github.com/crankynetman/heatlapse.git"

# See https://microsoft.github.io/pyright/#/getting-started
[tool.pyright]
include = ["heatlapse","tests"]
ignore = ["**/*.ipynb"]
pythonVersion = "3.13"
typeCheckingMode = "strict"

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[tool.refurb]
python_version = "3.13"



[tool.ruff]
# See https://docs.astral.sh/ruff/rules/
target-version = "py312"

line-length = 88

[tool.ruff.lint]
select = [
  "E",    # pycodestyle Errors
  "W",    # pycodestyle Warnings
  "A",    # flake8-builtins
  "ANN",  # flake8-annotations
  "ARG",  # flake8-unused-arguments
  "B",    # flake8-Bugbear
  "BLE",  # flake8-blind-except
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  "COM",  # flake8-commas
  "D",    # pydocstyle
  "EM",   # flake8-errmsg
  "ERA",  # eradicate
  "EXE",  # flake8-executable
  "F",    # pyFlakes
  "FA",   # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "FIX",  # flake8-fixme
  "FLY",  # flynt
  "FURB", # refurb
  "G",    # flake8-logging-format
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "INP",  # flake8-no-pep420
  "INT",  # flake8-gettext
  "ISC",  # flake8-implicit-str-concat
  "LOG",  # flake8-logging
  "N",    # pep8-Naming
  "NPY",  # NumPy-specific
  "PERF", # Perflint
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "PYI",  # flake8-pyi
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific
  "S",    # flake8-bandit (Security)
  "SIM",  # flake8-simplify
  "SLF",  # flake8-self
  "SLOT", # flake8-slots
  "T10",  # flake8-debugger
  "T20",  # flake8-print
  "TCH",  # flake8-type-checking
  "TD",   # flake8-todos
  "TID",  # flake8-tidy-imports
  "TRY",  # tryceratops
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]    # module imported but unused
"docs/*"      = [
    "D100",     # Missing docstring in public module
    "INP001",   # File * is part of an implicit namespace package. Add an `__init__.py`.
]
"tests/*"     = [
    "INP001",
    "ANN201",   # Missing return type annotation for public function
    "S101",     # Use of `assert` detected
    "PLR2004",  # Magic value used in comparison, consider replacing * with a constant variable
    ]

[ruff.lint.pydocstyle]
convention = "google"
